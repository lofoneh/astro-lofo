---
// ThemeToggle.astro
---

<button
  id="theme-toggle"
  type="button"
  class="rounded-lg p-2.5 text-sm text-neutral transition-colors hover:bg-neutral/10 focus:outline-none focus:ring-2 focus:ring-primary"
  aria-label="Toggle theme"
>
  <!-- Sun icon for light mode -->
  <svg
    id="theme-toggle-light-icon"
    class="h-5 w-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      fill-rule="evenodd"
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      clip-rule="evenodd"></path>
  </svg>
  
  <!-- Moon icon for dark mode -->
  <svg
    id="theme-toggle-dark-icon"
    class="h-5 w-5"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
</button>

<script>
  // Theme toggle functionality
  const themeToggle = document.getElementById('theme-toggle');
  const lightIcon = document.getElementById('theme-toggle-light-icon');
  const darkIcon = document.getElementById('theme-toggle-dark-icon');
  
  // Check for saved theme preference or default to 'dark'
  const getStoredTheme = () => {
    if (typeof localStorage !== 'undefined') {
      return localStorage.getItem('theme');
    }
    return null;
  };
  
  const getPreferredTheme = () => {
    const storedTheme = getStoredTheme();
    if (storedTheme) {
      return storedTheme;
    }
    
    // Default to dark theme (matching your original design)
    return 'dark';
  };
  
  const setTheme = (theme: string) => {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
      lightIcon?.classList.remove('hidden');
      darkIcon?.classList.add('hidden');
    } else {
      document.documentElement.classList.remove('dark');
      lightIcon?.classList.add('hidden');
      darkIcon?.classList.remove('hidden');
    }
    
    if (typeof localStorage !== 'undefined') {
      localStorage.setItem('theme', theme);
    }
  };
  
  // Initialize theme
  const currentTheme = getPreferredTheme();
  setTheme(currentTheme);
  
  // Handle theme toggle
  themeToggle?.addEventListener('click', () => {
    const isDark = document.documentElement.classList.contains('dark');
    const newTheme = isDark ? 'light' : 'dark';
    setTheme(newTheme);
  });
</script>